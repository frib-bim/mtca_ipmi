# File: power_module.template
# Date: 2017-06-26
# Author: Wayne Lewis
#
# Description:
# Database for getting MTCA crate power module sensors
#
# Macros:
# P:    PV prefix
# UNIT: Power module number 

record(ai, "$(P)$(S)12V0") {
    field(DESC, "12 V supply (0)")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 12V0")
    field(PREC, "2")
}

record(ai, "$(P)$(S)12V0_1") {
    field(DESC, "12 V supply (1)")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 12V0_1")
    field(PREC, "2")
}

record(ai, "$(P)$(S)5V0") {
    field(DESC, "5.0 V supply")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 5V0")
    field(PREC, "2")
}

record(ai, "$(P)$(S)5V0_1") {
    field(DESC, "5.0 V supply")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 5V0_1")
    field(PREC, "2")
}

record(ai, "$(P)$(S)3V3") {
    field(DESC, "3.3 V supply")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 3V3")
    field(PREC, "2")
}

record(ai, "$(P)$(S)TEMP_INLET") {
    field(DESC, "Temperature inlet")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP_INLET")
    field(PREC, "1")
}

record(ai, "$(P)$(S)TEMP_OUTLET") {
    field(DESC, "Temperature outlet")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP_OUTLET")
    field(PREC, "1")
}

record(ai, "$(P)$(S)TEMP1") {
    field(DESC, "Temperature 1")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP1")
    field(PREC, "1")
}

record(ai, "$(P)$(S)TEMP2") {
    field(DESC, "Temperature 2")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP2")
    field(PREC, "1")
}

record(ai, "$(P)$(S)I_TOTAL") {
    field(DESC, "Total current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I_TOTAL")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I01") {
    field(DESC, "Ch01 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I01")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I02") {
    field(DESC, "Ch02 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I02")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I03") {
    field(DESC, "Ch03 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I03")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I04") {
    field(DESC, "Ch04 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I04")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I05") {
    field(DESC, "Ch05 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I05")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I06") {
    field(DESC, "Ch06 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I06")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I07") {
    field(DESC, "Ch07 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I07")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I08") {
    field(DESC, "Ch08 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I08")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I09") {
    field(DESC, "Ch09 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I09")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I10") {
    field(DESC, "Ch10 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I10")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I11") {
    field(DESC, "Ch11 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I11")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I12") {
    field(DESC, "Ch12 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I12")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I13") {
    field(DESC, "Ch13 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I13")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I14") {
    field(DESC, "Ch14 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I14")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I15") {
    field(DESC, "Ch15 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I15")
    field(PREC, "2")
}

record(ai, "$(P)$(S)I16") {
    field(DESC, "Ch16 current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I16")
    field(PREC, "2")
}

record(stringin, "$(P)$(S)NAME") {
    field(DESC, "Card name")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_name pm $(UNIT)")
}

record(ai, "$(P)$(S)SLOT") {
    field(DESC, "Slot number")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_slot pm $(UNIT)")
    field(PREC, "0")
    field(EGU,  "None")
}

#record(bi, "$(P)$(S)HOT_SWAP") {
    #field(DESC, "Hot swap status")
    #field(DTYP, "Python Device")
    #field(SCAN, "I/O Intr")
    #field(INP,  "@MTCACrate get_val pm $(UNIT) HOT_SWAP")
    #field(ZNAM, "Fault")
    #field(ZSV,  "MAJOR")
    #field(ONAM, "OK")
    #field(OSV,  "NO_ALARM")
#}

record(mbbi, "$(P)$(S)STATUS") {
    field(DESC, "Slot alarm status")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_status pm $(UNIT)")
    field(ZRVL, "0")
    field(ZRST, "UNSET")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "NO_ALARM")
    field(ONSV, "NO_ALARM")
    field(TWVL, "2")
    field(TWST, "NON_CRITICAL")
    field(TWSV, "MINOR")
    field(THVL, "3")
    field(THST, "CRITICAL")
    field(THSV, "MAJOR")
    field(FRVL, "4")
    field(FRST, "NON_RECOVERABLE")
    field(FRSV, "MAJOR")
}
    
record(calcout, "$(P)$(S)POWER_CALC") {
    field(DESC, "Power module power calculation")
    # Based on conversation with Scott Cogan, use nominal 12 VDC
    field(INPA, "12")
    # Uncomment this line and comment above line to use sensor voltage
    #field(INPA, "$(P)$(S)12V0 CPP")
    field(INPB, "$(P)$(S)I_TOTAL CPP")
    field(CALC, "A*B")
    field(OOPT, "On Change")
    field(OUT,  "$(P)$(S)POWER PP")
}

record(ai, "$(P)$(S)POWER") {
    field(DESC, "Power module power")
    field(EGU,  "W")
    field(PREC, "1")
}
    
record(bi, "$(P)$(S)COMMS_STS") {
	field(DESC, "$(S) communications status")
	field(DTYP, "Python Device")
	field(SCAN, "I/O Intr")
	field(INP,  "@MTCACrate get_comms_sts pm $(UNIT)")
	field(ZNAM, "Error")
	field(ZSV,  "MAJOR")
	field(ONAM, "OK")
	field(OSV,  "NO_ALARM")
}

